name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build & Test
    env:
      Headless: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ./src/pitstop.sln

    - name: Build
      run: dotnet build --no-restore ./src/pitstop.sln

    - name: Test
      run: dotnet test --no-build --verbosity normal ./src/pitstop.sln

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Publish
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

        # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.PAT_GITHUB }}" | docker login ghcr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Run shell script
      run: ./RebuildAllDockerImages.ps1
      working-directory: src
      shell: pwsh

    # Run the push-images.ps1 script
    - name: Execute push images script
      run: ./push-images.ps1
      working-directory: src
      shell: pwsh

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    name: depploy
    if: github.ref == 'refs/heads/main'

      steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Minikube
    - name: Setup Minikube
      uses: medyagh/setup-minikube@latest
      with:
        minikube driver: docker  # Adjust if using a different driver

    # Copy your KUBECONFIG file to the GitHub runner
    - name: Configure KUBECONFIG
      # Assuming `config-groep5.yml` is either in the repository or stored as a secret
      run: |
        mkdir -p $HOME/.kube
        cp src/.config-groep5.yml $HOME/.kube/config  # Update path if needed
      env:
        KUBECONFIG: $HOME/.kube/config  # Set KUBECONFIG to the copied file path

    # Set the Kubernetes context
    - name: Use Kubernetes Context
      run: kubectl config use-context groep5

    # Stop existing pods (uses stop-all.ps1 script)
    - name: Stop Pods
      run: ./stop-all.ps1
      working-directory: src
      shell: pwsh

    # Start pods (uses start-all.ps1 script)
    - name: Start Pods
      run: ./start-all.ps1 -nomesh
      working-directory: src
      shell: pwsh
